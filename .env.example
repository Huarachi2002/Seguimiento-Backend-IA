# ===========================================
# CONFIGURACIÓN DE VARIABLES DE ENTORNO
# ===========================================
# Copia este archivo a .env y ajusta los valores

# --- Configuración de la Aplicación ---
APP_NAME="WhatsApp AI Assistant"
APP_VERSION="1.0.0"
# Entorno: development, staging, production
ENVIRONMENT=development
# Nivel de log: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO
# Puerto en el que correrá la aplicación
PORT=8000

# --- Configuración del Modelo de IA ---
# Nombre del modelo de Hugging Face a utilizar
# Opciones recomendadas:
#   - microsoft/DialoGPT-small (350MB, GPU 2GB+)
#   - microsoft/DialoGPT-medium (800MB, GPU 4GB+) ⭐ RECOMENDADO
#   - microsoft/DialoGPT-large (1.5GB, GPU 8GB+)
#   - facebook/blenderbot-400M-distill (1.6GB, GPU 6GB+)
#   - facebook/blenderbot-1B-distill (2.7GB, GPU 8GB+)
#   - facebook/mbart-large-50 (1.2GB, GPU 8GB+)
#  - PlanTL-GOB-ES/roberta-base-bne (500MB, GPU 4GB+) - Modelo en español
MODEL_NAME=PlanTL-GOB-ES/roberta-base-bne

# Dispositivo: cuda (GPU NVIDIA), cpu, mps (Mac M1/M2), auto (detectar automáticamente)
# Para GPU: Asegúrate de haber instalado PyTorch con CUDA
# Verifica con: python -c "import torch; print(torch.cuda.is_available())"
DEVICE=cuda

# Ruta local donde se cachean los modelos (opcional)
# Por defecto usa: ~/.cache/huggingface/
# Puedes especificar una ruta personalizada para ahorrar espacio en C:
MODEL_CACHE_DIR=./models

# Parámetros de generación de texto
MAX_LENGTH=150        # Longitud máxima de respuesta (tokens)
TEMPERATURE=0.7       # Creatividad (0.0 = determinista, 1.0 = muy creativo)
TOP_P=0.9            # Nucleus sampling (probabilidad acumulada)
TOP_K=50             # Top-K sampling (número de tokens a considerar)

# --- Configuración de Base de Datos ---
# PostgreSQL recomendado para producción
DATABASE_URL=postgresql://user:password@localhost:5432/whatsapp_ai
# Para desarrollo, puedes usar SQLite:
# DATABASE_URL=sqlite:///./whatsapp_ai.db

# --- Configuración de Redis (Caché y Contexto Conversacional) ---
# Host de Redis
REDIS_HOST=localhost
# Puerto de Redis (por defecto 6379)
REDIS_PORT=6379
# Base de datos de Redis (0-15)
REDIS_DB=0
# Decodificar respuestas automáticamente
REDIS_DECODE_RESPONSES=true

# Password de Redis (opcional, dejar vacío si no hay autenticación)
REDIS_PASSWORD=

# --- Configuración de Seguimiento Backend ---
# URL del servicio Seguimiento (backend principal con PostgreSQL)
SEGUIMIENTO_SERVICE_URL=http://localhost:3001
# Timeout para peticiones HTTP en segundos
SEGUIMIENTO_TIMEOUT=10

# Tiempo de vida (TTL) de conversaciones en segundos
# 3600 = 1 hora, 7200 = 2 horas, 86400 = 24 horas
CONVERSATION_TTL=3600

# Para Docker Compose (usar el nombre del servicio como host):
# REDIS_HOST=redis

# Para Redis Cloud o servicios en la nube, usa REDIS_URL completa:
# REDIS_URL=redis://default:password@redis-12345.cloud.redislabs.com:12345
# Nota: Si defines REDIS_URL, se ignoran REDIS_HOST, REDIS_PORT, etc.

# --- Configuración de N8N ---
# URL del webhook de n8n para enviar respuestas
N8N_WEBHOOK_URL=http://localhost:5678/webhook/whatsapp-response
# Token de autenticación para n8n (opcional pero recomendado)
N8N_API_KEY=your-n8n-api-key-here

# --- Configuración de CORS ---
# Orígenes permitidos (separados por coma)
CORS_ORIGINS=http://localhost:3000,http://localhost:5678
# Permitir credenciales
CORS_ALLOW_CREDENTIALS=true

# --- Configuración de Seguridad ---
# Clave secreta para JWT (genera una aleatoria para producción)
SECRET_KEY=your-secret-key-change-this-in-production
# Algoritmo para JWT
ALGORITHM=HS256
# Tiempo de expiración de tokens en minutos
ACCESS_TOKEN_EXPIRE_MINUTES=30

# --- Configuración del Centro Médico ---
MEDICAL_CENTER_NAME=CAÑADA DEL CARMEN
MEDICAL_CENTER_PHONE=+591-xxx-xxxx
MEDICAL_CENTER_EMAIL=contacto@canadadelcarmen.com

# --- Límites y Cuotas ---
# Máximo de tokens por respuesta
MAX_TOKENS=150
# Temperatura del modelo (0.0 - 1.0, mayor = más creativo)
TEMPERATURE=0.7
# Máximo de mensajes en historial de conversación
MAX_CONVERSATION_HISTORY=10
# Rate limiting: máximo de requests por minuto por usuario
RATE_LIMIT_PER_MINUTE=20

# --- Monitoreo y Observabilidad (opcional) ---
# SENTRY_DSN=https://your-sentry-dsn
# ENABLE_METRICS=true
